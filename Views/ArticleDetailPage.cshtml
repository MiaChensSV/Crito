@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ArticleDetailPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Services;
@using Umbraco.Cms.Core.Models.PublishedContent;
@inject IUserService UserService;

@{
    Layout = "_LayoutWithBreadcrumb.cshtml";
    var userService = UserService;
    var image = Model.Value<IPublishedContent>("newsImage");
	var selection = Umbraco.Content(Guid.Parse("404411e3-8886-4bd8-9b8d-eff58bfe84a0"))
        .ChildrenOfType("articleDetailPage")
        .Where(x => x.IsVisible())
        .OrderByDescending(x => x.UpdateDate).ToList().Take(3);
}

<section class="specific-article">
  <div class="container">
    <div class="article">
      <h2>@Model.Name</h2>
      <div class="sub-info">
        <p>@Model.CreateDate.ToString("MMM dd, yyyy")</p>
        <i class="fa-solid fa-circle"></i>
        <p>@Model.Value("newsCategory")</p>
        <i class="fa-solid fa-circle"></i>
        <p>@Model.CreatorName(UserService)</p>
      </div>
      <img src="@image.Url()" alt="@image.Name"/>
     @Model.Value("newsContent")
      
      
      <div class="key-words">
            @foreach (var tag in @Model.Value<IEnumerable<string>> ("newsTags"))
          {
            <span>@tag</span>
          }
      </div>
    </div>
    <div class="side-bar">
      <input value="Type to Search" aria-label="Search" />
      <div class="recent-posts">
        <h3>Recent Posts</h3>
        
    	@foreach (var item in selection)
    	{
    	    var url = item.Url();
    	    var date = item.CreateDate;
    	    var title = item.Name();

    	    <div class="one-post" href="@url">
              <h4>@title</h4>
              <p>@date.ToString("MMM dd, yyyy")</p>
            </div>
    	}
      </div>
      <div class="categories">
        <h3>Categories</h3>
        <div class="sub-category">
          <h4>Technology</h4>
          <p>- 20 Posts</p>
        </div>
        <div class="sub-category">
          <h4>Freelancing</h4>
          <p>- 07 Posts</p>
        </div>
        <div class="sub-category">
          <h4>Writing</h4>
          <p>- 16 Posts</p>
        </div>
        <div class="sub-category">
          <h4>Marketing</h4>
          <p>- 11 Posts</p>
        </div>
        <div class="sub-category">
          <h4>Business</h4>
          <p>- 35 Posts</p>
        </div>
        <div class="sub-category">
          <h4>Education</h4>
          <p>- 14 Posts</p>
        </div>
      </div>
    </div>
  </div>
</section>

@await Html.PartialAsync("_Article&News")